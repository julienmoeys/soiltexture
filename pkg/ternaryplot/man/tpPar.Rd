% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/aa01-ternaryplot-options.R
\name{tpPar}
\alias{tpPar}
\title{Get or set default parameters for the package.}
\usage{
tpPar(par = NULL, reset = FALSE, testRange, testSum, fracSumTol, vertices,
  classes, scale, okClock, sp, onFailure, ticksAt, ticksShift, arrowsShift,
  arrowsHeight, arrowsCoords, arrowsBreak, grid.line.col, axis.line.lwd,
  plot.bg)
}
\arguments{
\item{par}{Three possible cases: \itemize{ \item If \code{par} is \code{NULL}
 (default): All the actual value of the parameters will be silently returned.
 \item If \code{par} is a vector of character strings representing parameter
 names. The value of the parameters named here will be (silently) returned.
 \item If \code{par} is a list following the format \code{tag = value}, where
 \code{tag} is the name of the parameter to be changed, and \code{value} is
 its new value.  Such a list is returned by \code{tpPar()}. Notice that
 parameters can also be set indivudually, using the options listed below. }}

\item{reset}{Single logical. If TRUE, all the parameters will be set to their
 default value. Values are reset before any change to the parameter values, as
 listed below.}

\item{testRange}{Single logical. Test if the range of fraction is between 0 and
 the expected sum of fractions (1 or 100).}

\item{testSum}{Single logical. Test if the sum of the 3 fractions is equal to
 the expected sum of fractions (1 or 100).}

\item{fracSumTol}{Single numeric. Tolerance on the sum of the 3 ternary fractions. Overall
 tolerance is \code{fracSum * fracSumTol}, where \code{fracSum} is the
 expected sum of the 3 ternary fractions. See
 \code{\link[ternaryplot]{createTernaryGeometry}} or
 \code{\link[ternaryplot]{createTernarySystem}}.}

\item{vertices}{Vertices of a ternary classification (default): a
 \code{\link[base]{data.frame}} with 4 columns \code{id},
 \code{bo}, \code{le} and \code{ri}, as the identifier and
 the the 3 fractions (bottom, left, right) of the vertices.
 Each row is a vertex.}

\item{classes}{Polygons (classes outline) of a ternary classification (default):
 a \code{\link[base]{data.frame}} with 3 columns \code{abbrev},
 \code{name} and \code{verticesId}, as the abbreviation,
 name and identifier of the vertices of each class. Notice
 that \code{verticesId} must be a \code{\link[base]{list}} of
 vectors, each containing the vertices that define the polygon.
 You can use \code{\link[base]{list}}\code{()} to preserve
 the list format when defining the \code{\link[base]{data.frame}}.
 For example
 \code{ data.frame( "abbrev" = "A", "name" = "Aa", "verticesId" = I( list( 1:3 ) ) ) }}

\item{scale}{Scale-extent of a ternary classification (default): a
 \code{\link[base]{data.frame}} with 3 columns \code{bo},
 \code{le} and \code{ri}, and 2 rows (\code{min} and \code{max}),
 as the min and max of the 3 fractions to be displayed (bottom,
 left, right).}

\item{okClock}{A list of vectors of 3 logical values, with the valid
 \code{blrClock} geometries.}

\item{sp}{Single logical value. If \code{TRUE}, the low-level graphic
 functions output a \code{Spatial*} object of the graphical
 element that can be reused in later calculations with
 \code{\link[sp]{sp}}. If \code{FALSE}, simply returns a
 \code{\link[base]{data.frame}} with the x-y coordinates of the
 graphical element.}

\item{onFailure}{R \code{\link{function}}. Function that should be used by
 \code{\link[ternaryplot]{ternaryCheck}} (and related methods)}

\item{ticksAt}{Vector of numeric. Pre-defined position of the tick-marks for the 3 axis.
 Between 0 and 'fracSum' (the sum of the 3 fractions).}

\item{ticksShift}{Single numeric. Tick-marks 'size', expressed so that
 \code{ticksShift * fracSum} is the length of the tick-marks.
 If \code{NA}, it is calculated internally from
 \code{par("tcl")} and the height in of a margin line
 in inches, estimated using the internal function
 \code{.nbMargin2diffXY()}.}

\item{arrowsShift}{Vector of two numeric values. Axis' arrows' shift from their
 axis, expressed so that \code{arrowsShift * fracSum} is the
 start and end point. If \code{NA}, the arrow shift from
 their axis will be calculated from \code{par("mgp")[ 1L ]}
 and \code{arrowsHeight} (below).}

\item{arrowsHeight}{Single numeric values. Axis' arrows' height (distance
 between the 1st part of the arrow and the 2nd part of the
 arrow), expressed in fraction of margin-lines-height
 (same as \code{par("mgp")}). Only used when \code{arrowsShift}
 (above) is \code{NA}.}

\item{arrowsCoords}{Parameters used internally to define axis-arrows location}

\item{arrowsBreak}{Single logical value. If \code{TRUE}, axis-arrows are 'browken'
 (i.e. with the arrow starting parallel to the axis and finishing
 toward the axis).}

\item{grid.line.col}{Single character value representing a color. Color of the
 grid-lines added to a ternary plot.}

\item{axis.line.lwd}{Single numerical value. Line thickness for the axis-lines
 (including ticks and arrows)}

\item{plot.bg}{Single character value representing a color. Fill-color of the
 plot region (frame). Set to \code{NA} or \code{"transparemt"}
 to suppress color.}
}
\value{
Returns a partial or complete list of (actual) parameter values, as a
 named list.
}
\description{
Get or set default parameters for the package. Notice changes
 done to the parameter values are reset everytime the R session
 is closed and the package is reloaded.
}
\details{
The function has 3 possible, non-exclusive behaviours: \itemize{ \item If
 \code{reset=TRUE}, resetting the parameters to their initial values, as
 defined in this function. \item (Silently) returning the actual value of the
 package parameters. If \code{par=NULL}, all the values are returned.  If
 \code{par} is a vector of parameter names, their value will be returned.
 \item Setting-up the value of some parameters, passing a list of parameter
 value to \code{par} OR setting some of the parameters listed above. }

 Notice that when \code{reset=TRUE} and some new parameter values are
 provided, the parameters are first reset, and then the new parameter values
 are set. If \code{par} is a list, parameters are set first according to
 values in \code{par}, and then according to values in the parameters listed
 below. This combination is not recommended, but nonetheless possible.

 The actual value of the parameters is stored in (and can be retrieved from)
 the environment \code{rspPars}. The default value of the parameters are
 stored in the environment \code{rspPars}. Do not use them directly.
}
\seealso{
\code{\link{getTpPar}}.
}

