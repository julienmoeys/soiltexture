\documentclass[a4paper]{article}

\title{Additional functions for transforming soil particle%%%
    size distributions}

\author{Wei Shangguan}



\RequirePackage{Sweave} 
\SweaveOpts{width=14,height=14,keep.source=TRUE} 

%%% The commented parts below are needed by Sweave to index the vignette:
% \VignetteIndexEntry{transforming particle size distributions}
% \VignetteDepends{soiltexture} 
% \VignetteKeyword{soil} 
% \VignetteKeyword{texture} 
% \VignetteKeyword{plot} 
% \VignetteKeyword{classification} 
% \VignetteKeyword{transformation} 



\usepackage{Sweave}
\begin{document}



\maketitle



% +~~~~~~~~~~~~~~~~~~~~~~~~~~~~+
\section{Load the soiltexture package}


The soiltexture package can be installed from CRAN with the following 
commands: 

<<echo=TRUE,eval=FALSE>>=
install.packages("soiltexture") 
@


And loaded with the following commands:

<<echo=TRUE,eval=TRUE>>=
require("soiltexture") 
@



% +~~~~~~~~~~~~~~~~~~~~~~~~~~~~+
\section{Transforming soil texture data using many Particle-Size
Distribution models (from 3 or more particle size classes)}


\texttt{TT.text.\-transf.Xm()} is used to transform soil texture
data from 3 or more particle size classes using various
Particle-Size Distribution (PSD) models. The \texttt{drc} package
and its associate
packages(\texttt{lattice},\texttt{magic},\texttt{nlme},
\texttt{plotrix}) are required in the PSD model fitting.Compared to
\texttt{TT.text.\-transf()}, the following check is not needed (and
not done) :

\begin{itemize}
    \item When the 1st value of input \texttt{tri.data} and output
    particle size classes limits is 0, The 2nd value of the output
    particle size classes limits must be higher or equal to the
    2nd value of the input particle size classes limits."
\end{itemize}


We need first to create a dummy dataset with more than 3 particle
size classes:


<<>>=
my.text4 <- data.frame(
    "CLAY"  = c(05,60,15,05,25,05,25,45,65,75,13,47),
    "FSILT" = c(02,04,10,15,25,40,35,20,10,05,10,20),
    "CSILT" = c(03,04,05,10,30,45,30,25,05,10,07,23),
    "SAND"  = c(90,32,70,70,20,10,10,10,20,10,70,10) 
)   #
@

Transform this data frame from 4 particle size classes to 3 particle
size classes:


<<>>=
res <- TT.text.transf.Xm(
    tri.data    = my.text4,
    base.ps.lim = c(0,1,50,2000),
    dat.ps.lim  = c(0,2,30,60,2000),
    psdmodel    ="AD"
)   #
#
round( res[,1:6], 3 ) 
#
round( res[,7:ncol(res)], 3 ) 
@



The first 3 columns are the predicted values with a sum not equal to
100\% (can be normalised by \texttt{TT.normalise.sum.X()}). The
following 4 columns are the fitted PSD model parameters. And the
last column is the Residual Sum of Squares (deviance). Note that the transforming 
results may be slightly different even with the same function parameters. 
This is cause by the nature of \texttt{drc} package in fitting dose-response models.\\\\

Sometimes, the fitting will failed for the iteration is not converged
or some errors and warnings happened. These can be ignored, as you
can get the transforming results.\\\\

The following PSD models are implemented: Anderson (AD), Fredlund4P
(F4P), Fredlund3P (F3P), modified logistic growth (ML),
Offset-Nonrenormalized Lognormal (ONL), Offset-Renormalized
Lognormal (ORL), Skaggs (S), van Genuchten type(VG),van Genuchten
modified, Weibull (W), Logarithm(L),  Logistic growth (LG),
Simple Lognormal (SL),Shiozawa and Compbell (SC). The performance of
PSD models is influenced by many aspects like soil texture class,
number and position (or closeness) of observation points, clay
content etc. The latter four PSD models perform worse than the
former ten. The AD, F4P, S, and W model is recommended for most of
texture classes. And it will be even better to compare several
different PSD models and using the results of the model with the
minimum residual sum of squares. Except S and W models, all the PSD
models could be used to predict the content below the minimum input
limit. The "psdmodel" option could be changed to any other of the
above models:


<<>>=
res <- TT.text.transf.Xm(
    tri.data    = my.text4,
    base.ps.lim = c(0,1,50,2000),
    dat.ps.lim  = c(0,2,30,60,2000),
    psdmodel    = "ML"
)   #
#
round( res[,1:6], 3 ) 
#
round( res[,7:ncol(res)], 3 ) 
@

Because the current PSD model fitting is quite time-consuming and
some models are not always successful for all soils, you can change
the PSD model, or optimization method potentially at the cost of some accuracy.
The default "omethod" option (i.e. "all") is to run all methods and
choose the best results with minimum residual sum of squares. The
optional methods are "Nelder-Mead", "BFGS", "CG", "L-BFGS-B", "SANN"
(see \texttt{optim()} for details.)


<<>>=
res <- TT.text.transf.Xm(
    tri.data    = my.text4,
    base.ps.lim = c(0,1,50,2000),
    dat.ps.lim  = c(0,2,30,60,2000),
    psdmodel    = "ML",
    omethod     = "SANN"
)   #
#
round( res[,1:6], 3 ) 
#
round( res[,7:ncol(res)], 3 ) 
@



% +~~~~~~~~~~~~~~~~~~~~~~~~~~~~+
\section{Normalizing soil texture data (sum of X texture classes)}


\texttt{TT.normalise.sum.X()} is similar to 
\texttt{TT.normalise.sum()}. But it normalize the sum of the X (X>1)
texture classes instead of 3. The option \texttt{tri.data} should be
a data.frame with only soil texture data (no additional extra
columns should be present).



<<>>=
my.text5 <- data.frame(
    "CLAY"  = c(05,60,15,04.9,25,05,25,45,65,75,13,47),
    "FSILT" = c(02,04.3,10,15,25,40,35,20,10,05,10,20),
    "CSILT" = c(03,04,05,10,30,45,30,25,05,10,07.2,23.3),
    "SAND"  = c(90.5,32,70,70,20.3,10.9,9.3,9.4,20,10,70,10)
)   #
#
res <- TT.normalise.sum.X( 
    tri.data    = my.text5,
    residuals   = TRUE
)   #
#
res
@



\end{document}
